name: Deploy Application

on:
  push:
    branches:
      - main
      - development
      
  workflow_dispatch:

permissions:
  contents: read
  actions: read
  id-token: write

jobs:
  setup-check:
    runs-on: ubuntu-latest
    outputs:
      needs_setup: ${{ steps.check.outputs.needs_setup }}
    steps:
      - name: Check if setup is needed
        id: check
        run: |
          if [ -z "${{ vars.ECR_REPOSITORY }}" ]; then
            echo "needs_setup=true" >> $GITHUB_OUTPUT
            echo "ðŸ”§ Setup needed: ECR_REPOSITORY variable not found"
          else
            echo "needs_setup=false" >> $GITHUB_OUTPUT
            echo "âœ… Setup complete: ECR_REPOSITORY = ${{ vars.ECR_REPOSITORY }}"
          fi

  setup:
    runs-on: ubuntu-latest
    needs: setup-check
    if: needs.setup-check.outputs.needs_setup == 'true'
    permissions:
      contents: read
      actions: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Extract service name from package.json
        id: extract-name
        run: |
          SERVICE_NAME=$(cat package.json | jq -r '.name')
          echo "service_name=$SERVICE_NAME" >> $GITHUB_OUTPUT

      - name: Create ECR Repository
        run: |
          aws ecr create-repository --repository-name ${{ steps.extract-name.outputs.service_name }} --region us-east-1 || echo "Repository already exists"

      - name: Set GitHub Variables
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh variable set ECR_REPOSITORY --body "${{ steps.extract-name.outputs.service_name }}"

      - name: Setup Complete
        run: |
          echo "âœ… CI/CD Setup Complete!"
          echo "- ECR Repository: ${{ steps.extract-name.outputs.service_name }}"
          echo "- GitHub Variables: Configured"
          echo "- Ready for automatic deployments"

  deploy:
    needs: [setup-check, setup]
    if: always() && (needs.setup-check.outputs.needs_setup == 'false' || needs.setup.result == 'success')
    uses: LinkedFarma/workflows/.github/workflows/argo-cd.yml@master
    secrets: inherit
