name: Setup CI/CD Automatically
on:
  workflow_dispatch:
    inputs:
      setup_required:
        description: 'Run setup (first time only)'
        required: false
        default: 'true'
        type: choice
        options:
          - 'true'
          - 'false'

permissions:
  contents: read
  actions: write
  variables: write

jobs:
  setup:
    runs-on: ubuntu-latest
    if: github.event.inputs.setup_required == 'true'
    permissions:
      contents: read
      actions: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Extract service name from package.json
        id: extract-name
        run: |
          # Try to get name from package.json, fallback to repository name
          if [ -f package.json ]; then
            SERVICE_NAME=$(cat package.json | jq -r '.name // empty')
          fi
          
          # If still empty, use repository name
          if [ -z "$SERVICE_NAME" ] || [ "$SERVICE_NAME" = "null" ]; then
            SERVICE_NAME="${{ github.repository }}"
            SERVICE_NAME="${SERVICE_NAME##*/}"  # Get just the repo name part
          fi
          
          echo "service_name=$SERVICE_NAME" >> $GITHUB_OUTPUT
          echo "Using service name: $SERVICE_NAME"

      - name: Create ECR Repository
        run: |
          if ! aws ecr create-repository --repository-name ${{ steps.extract-name.outputs.service_name }} --region us-east-1; then
            echo "Repository already exists"
          fi

      - name: Set GitHub Variables
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ADMIN_TOKEN }}
        run: |
          # Try to set the variable with the default token first
          if gh variable set ECR_REPOSITORY --body "${{ steps.extract-name.outputs.service_name }}"; then
            echo "Variable set successfully with GITHUB_TOKEN"
          else
            echo "Failed to set variable with GITHUB_TOKEN, trying with GH_ADMIN_TOKEN"
            # Fallback to admin token if available
            if [ -n "${{ secrets.GH_ADMIN_TOKEN }}" ]; then
              GH_TOKEN="${{ secrets.GH_ADMIN_TOKEN }}" gh variable set ECR_REPOSITORY --body "${{ steps.extract-name.outputs.service_name }}" || echo "Variable setting failed - needs to be set manually"
            else
              echo "GH_ADMIN_TOKEN not available - variable needs to be set manually"
            fi
          fi

      - name: Setup Complete
        run: |
          echo "✅ CI/CD Setup Complete!"
          echo "- ECR Repository: ${{ steps.extract-name.outputs.service_name }}"
          echo "- GitHub Variables: Configured"
          echo "- Ready for automatic deployments"

  info:
    runs-on: ubuntu-latest
    if: github.event.inputs.setup_required != 'true'
    steps:
      - name: Setup Info
        run: |
          echo "ℹ️  Setup already completed"
          echo "CI/CD is ready for deployments"
