name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}
  IMAGE_NAME: ${{ values.name }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: |
        if [ -f package-lock.json ]; then
          npm ci
        else
          npm install
        fi
    
    - name: Run linter
      run: npm run lint
    
    - name: Run tests
      run: npm test

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    permissions:
      contents: write
      id-token: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Create ECR repository if it doesn't exist
      run: |
        aws ecr describe-repositories --repository-names ${{ env.IMAGE_NAME }} --region ${{ env.AWS_REGION }} || \
        aws ecr create-repository --repository-name ${{ env.IMAGE_NAME }} --region ${{ env.AWS_REGION }}
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
    
    - name: Extract metadata
      id: meta
      run: |
        echo "image=${{ env.ECR_REGISTRY }}/${{ env.IMAGE_NAME }}" >> $GITHUB_OUTPUT
        echo "tag=${GITHUB_SHA::8}" >> $GITHUB_OUTPUT
        echo "full-image=${{ env.ECR_REGISTRY }}/${{ env.IMAGE_NAME }}:${GITHUB_SHA::8}" >> $GITHUB_OUTPUT
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ steps.meta.outputs.image }}:${{ steps.meta.outputs.tag }}
          ${{ steps.meta.outputs.image }}:latest
    
    - name: Update Kubernetes manifests
      run: |
        # Replace ECR registry placeholder with actual ECR registry
        sed -i "s|ECR_REGISTRY_PLACEHOLDER|${{ env.ECR_REGISTRY }}|g" k8s/kustomization.yaml
        
        # Update image tag in kustomization.yaml
        sed -i "s|newTag: .*|newTag: ${{ steps.meta.outputs.tag }}|" k8s/kustomization.yaml
        
        # Commit changes
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add k8s/kustomization.yaml
        git commit -m "Update image tag to ${{ steps.meta.outputs.tag }}" || exit 0
        git push
